{"ast":null,"code":"var _jsxFileName = \"/home/ruan/workspaces/ws-sts/ws-devsuperior/projeto-sds3/frontend/src/components/DonutChart/index.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useState } from 'react';\nimport Chart from 'react-apexcharts';\nimport { BASE_URL } from 'utils/requests';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DonutChart = () => {\n  _s();\n\n  const [chartData, setChartData] = useState({\n    labels: [],\n    series: []\n  }); // FORMA ERRADA\n\n  axios.get(`${BASE_URL}/sales/amount-by-seller`).then(response => {\n    const data = response.data;\n    const myLabels = data.map(x => x.sallerName);\n    const mySeries = data.map(x => x.sum);\n    setChartData({\n      labels: myLabels,\n      series: mySeries\n    });\n    console.log(chartData);\n  }); //const mockData = {\n  // series: [477138, 499928, 444867, 220426, 473088],\n  //labels: ['Anakin', 'Barry Allen', 'Kal-El', 'Logan', 'Padmé']\n  //}\n\n  const options = {\n    legend: {\n      show: true\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    options: { ...options,\n      labels: chartData.labels\n    },\n    series: chartData.series,\n    type: \"donut\",\n    height: \"240\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 8\n  }, this);\n};\n\n_s(DonutChart, \"ujCIpwCZxUHhwshpaDJgaKM3V0I=\");\n\n_c = DonutChart;\nexport default DonutChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"DonutChart\");","map":{"version":3,"sources":["/home/ruan/workspaces/ws-sts/ws-devsuperior/projeto-sds3/frontend/src/components/DonutChart/index.tsx"],"names":["axios","useState","Chart","BASE_URL","DonutChart","chartData","setChartData","labels","series","get","then","response","data","myLabels","map","x","sallerName","mySeries","sum","console","log","options","legend","show"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AAEA,SAASC,QAAT,QAAyB,gBAAzB;;;AAOA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAEjB,QAAM,CAACC,SAAD,EAAWC,YAAX,IAAyBL,QAAQ,CAAY;AAACM,IAAAA,MAAM,EAAE,EAAT;AAAaC,IAAAA,MAAM,EAAE;AAArB,GAAZ,CAAvC,CAFiB,CAIhB;;AACDR,EAAAA,KAAK,CAACS,GAAN,CAAW,GAAEN,QAAS,yBAAtB,EACMO,IADN,CACWC,QAAQ,IAAI;AACd,UAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAtB;AACA,UAAMC,QAAQ,GAAGD,IAAI,CAACE,GAAL,CAASC,CAAC,IAAIA,CAAC,CAACC,UAAhB,CAAjB;AACA,UAAMC,QAAQ,GAAGL,IAAI,CAACE,GAAL,CAASC,CAAC,IAAGA,CAAC,CAACG,GAAf,CAAjB;AAEAZ,IAAAA,YAAY,CAAC;AAAEC,MAAAA,MAAM,EAAEM,QAAV;AAAoBL,MAAAA,MAAM,EAAES;AAA5B,KAAD,CAAZ;AACDE,IAAAA,OAAO,CAACC,GAAR,CAAYf,SAAZ;AACF,GARN,EALiB,CAgBlB;AACA;AACC;AACD;;AAEH,QAAMgB,OAAO,GAAG;AACZC,IAAAA,MAAM,EAAE;AACJC,MAAAA,IAAI,EAAE;AADF;AADI,GAAhB;AAMA,sBACG,QAAC,KAAD;AACA,IAAA,OAAO,EAAE,EAAC,GAAGF,OAAJ;AAAYd,MAAAA,MAAM,EAACF,SAAS,CAACE;AAA7B,KADT;AAEA,IAAA,MAAM,EAAEF,SAAS,CAACG,MAFlB;AAGA,IAAA,IAAI,EAAC,OAHL;AAIA,IAAA,MAAM,EAAC;AAJP;AAAA;AAAA;AAAA;AAAA,UADH;AAQD,CAnCH;;GAAMJ,U;;KAAAA,U;AAqCJ,eAAeA,UAAf","sourcesContent":["import axios from 'axios';\nimport { useState } from 'react';\nimport Chart from 'react-apexcharts';\nimport { SaleSum } from 'types/sale';\nimport { BASE_URL } from 'utils/requests';\n\ntype ChartData = {\n    labels: string[];\n    series: number[];\n}\n\nconst DonutChart = () => {\n          \n        const [chartData,setChartData]=useState<ChartData>({labels: [], series: []});\n\n         // FORMA ERRADA\n        axios.get(`${BASE_URL}/sales/amount-by-seller`)\n             .then(response => {\n                 const data = response.data as SaleSum[];\n                 const myLabels = data.map(x => x.sallerName);\n                 const mySeries = data.map(x =>x.sum);\n\n                 setChartData({ labels: myLabels, series: mySeries});\n                console.log(chartData)\n             });\n\n\n       //const mockData = {\n       // series: [477138, 499928, 444867, 220426, 473088],\n        //labels: ['Anakin', 'Barry Allen', 'Kal-El', 'Logan', 'Padmé']\n       //}\n    \n    const options = {\n        legend: {\n            show: true\n        }\n    }\n   \n    return (\n       <Chart \n       options={{...options,labels:chartData.labels}}\n       series={chartData.series}\n       type=\"donut\"\n       height=\"240\"\n       />\n    );\n  }\n  \n  export default DonutChart;\n  "]},"metadata":{},"sourceType":"module"}